// top level :)
module NES(

	input MAX10_CLK1_50,
	
	/* DE-10 I/O */
	input [1:0] KEY,	// top button is KEY[0], bottom button is KEY[1]. active low (low when pressed).
	input [9:0] SW,
	output [9:0] LEDR,
	
	/* HEX */
	output [7:0] HEX0,
	output [7:0] HEX1,
	output [7:0] HEX2,
	output [7:0] HEX3,
	output [7:0] HEX4,
	output [7:0] HEX5,
	
	/* SDRAM */	
	output DRAM_CLK,
	output [12:0] DRAM_ADDR,
	output [1:0] DRAM_BA,
	output DRAM_CAS_N,
	output DRAM_CKE,
	output DRAM_CS_N,
	inout [15:0] DRAM_DQ,
	output DRAM_LDQM,
	output DRAM_UDQM,
	output DRAM_RAS_N,
	output DRAM_WE_N,
	
	/* I/O BOARD */
	inout [15:0] ARDUINO_IO,
	inout ARDUINO_RESET_N,
	
	/* VGA OUTPUT */
	output [3:0] VGA_R,
	output [3:0] VGA_G,
	output [3:0] VGA_B,
	output VGA_HS,
	output VGA_VS
	
);

/* MISC */
logic [3:0] hex5_v, hex4_v, hex3_v, hex2_v, hex1_v, hex0_v;
logic [7:0] keycode;

/* SDRAM */
logic [1:0] sdram_wire_dqm;
assign DRAM_LDQM = sdram_wire_dqm[0];
assign DRAM_UDQM = sdram_wire_dqm[1];

/* SPI */
logic spi0_MISO, spi0_MOSI, spi0_SCLK, spi0_SS_n;
assign ARDUINO_IO[10] = spi0_SS_n;
assign ARDUINO_IO[13] = spi0_SCLK;
assign ARDUINO_IO[11] = spi0_MOSI;
assign ARDUINO_IO[12] = 1'bZ;
assign spi0_MISO = ARDUINO_IO[12];

/* USB */
logic usb_gpx_export, usb_irq_export, usb_rst_export;
assign ARDUINO_IO[9] = 1'bZ; 
assign usb_irq_export = ARDUINO_IO[9];
assign ARDUINO_RESET_N = usb_rst_export;
assign ARDUINO_IO[7] = usb_rst_export;
assign ARDUINO_IO[8] = 1'bZ;	// this is GPX?
assign usb_gpx_export = 1'b0;	// and GPX is not needed

assign ARDUINO_IO[6] = 1'b1;	// uSD card


NIOSIIe NIOSIIe (

	.clk_clk(MAX10_CLK1_50),
	.key_wire_export(KEY),
	.led_wire_export(LEDR),
	.reset_reset_n(1'b1),
	.sw_wire_export(SW),
	.hex_wire_export({hex5_v, hex4_v, hex3_v, hex2_v, hex1_v, hex0_v}),
	
	.keycode_export(keycode),
		
	.sdram_clk_clk(DRAM_CLK),
	.sdram_wire_addr(DRAM_ADDR),
	.sdram_wire_ba(DRAM_BA),
	.sdram_wire_cas_n(DRAM_CAS_N),
	.sdram_wire_cke(DRAM_CKE),
	.sdram_wire_cs_n(DRAM_CS_N),
	.sdram_wire_dq(DRAM_DQ),
	.sdram_wire_dqm(sdram_wire_dqm),
	.sdram_wire_ras_n(DRAM_RAS_N),
	.sdram_wire_we_n(DRAM_WE_N),
	
	.spi0_MISO(spi0_MISO),
	.spi0_MOSI(spi0_MOSI),
	.spi0_SCLK(spi0_SCLK),
	.spi0_SS_n(spi0_SS_n),
	
	.usb_gpx_export(usb_gpx_export),
	.usb_irq_export(usb_irq_export),
	.usb_rst_export(usb_rst_export)
		
);

HexDriver hex0 ( .in(hex0_v), .out(HEX0) );
HexDriver hex1 ( .in(hex1_v), .out(HEX1) );
HexDriver hex2 ( .in(hex2_v), .out(HEX2) );
HexDriver hex3 ( .in(hex3_v), .out(HEX3) );
HexDriver hex4 ( .in(hex4_v), .out(HEX4) );
HexDriver hex5 ( .in(hex5_v), .out(HEX5) );

logic pixel_clk, blank, sync;
logic [9:0] DrawX, DrawY;

VGA_Controller VGA_Controller (

	.Clk (MAX10_CLK1_50),
	.pixel_clk (pixel_clk),
	
	.hs (VGA_HS),
	.vs (VGA_VS),
	
	.Reset (1'b0),
	.blank (blank),
	.sync (sync),
	
	.DrawX (DrawX),
	.DrawY (DrawY)
	
); 

endmodule